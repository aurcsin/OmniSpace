diff --git a/assets/images/journal_bg.png b/assets/images/journal_bg.png
deleted file mode 100644
index 350b7ac..0000000
Binary files a/assets/images/journal_bg.png and /dev/null differ
diff --git a/lib/main.dart b/lib/main.dart
index 3e9eb63..95ebad7 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -7,11 +7,22 @@ import 'models/day_reflection.dart';
 import 'models/task.dart';
 import 'models/goal.dart';
 import 'models/event.dart';
+import 'models/media_attachment.dart';
 
 import 'services/omni_note_service.dart';
 import 'services/day_reflection_service.dart';
 
 import 'pages/journal_page.dart';
+import 'pages/trackers_page.dart';
+import 'pages/media_page.dart';
+import 'pages/root_cave_page.dart';
+import 'pages/workshop_forge_page.dart';
+import 'pages/studio_underwater_page.dart';
+import 'pages/sky_space_page.dart';
+import 'pages/garden_forest_page.dart';
+import 'pages/collections_page.dart';
+import 'pages/options_page.dart';
+import 'pages/account_page.dart';
 
 void main() async {
   WidgetsFlutterBinding.ensureInitialized();
@@ -24,6 +35,7 @@ void main() async {
   Hive.registerAdapter(OmniNoteAdapter());
   Hive.registerAdapter(AttachmentTypeAdapter());
   Hive.registerAdapter(AttachmentAdapter());
+  Hive.registerAdapter(MediaAttachmentAdapter());
   Hive.registerAdapter(DayReflectionAdapter());
   Hive.registerAdapter(TaskAdapter());
   Hive.registerAdapter(GoalAdapter());
@@ -44,7 +56,20 @@ class MyApp extends StatelessWidget {
     return MaterialApp(
       title: 'OmniSpace',
       theme: ThemeData(primarySwatch: Colors.deepPurple),
-      home: const JournalPage(),
+      initialRoute: '/journal',
+      routes: {
+        '/journal': (_) => const JournalPage(),
+        '/trackers': (_) => const TrackersPage(),
+        '/media': (_) => const MediaPage(),
+        '/root-cave': (_) => const RootCavePage(),
+        '/forge': (_) => const WorkshopForgePage(),
+        '/studio': (_) => const StudioUnderwaterPage(),
+        '/sky': (_) => const SkySpacePage(),
+        '/garden': (_) => const GardenForestPage(),
+        '/collections': (_) => const CollectionsPage(),
+        '/options': (_) => const OptionsPage(),
+        '/account': (_) => const AccountPage(),
+      },
     );
   }
 }
diff --git a/lib/models/event.dart b/lib/models/event.dart
index 0162211..ecedc55 100644
--- a/lib/models/event.dart
+++ b/lib/models/event.dart
@@ -17,10 +17,14 @@ class Event extends HiveObject {
   @HiveField(3)
   String? recurringRule;
 
+  @HiveField(4)
+  List<String> linkedNoteIds;
+
   Event({
     required this.title,
     required this.eventDate,
     this.isRecurring = false,
     this.recurringRule,
-  });
+    List<String>? linkedNoteIds,
+  }) : linkedNoteIds = linkedNoteIds ?? [];
 }
diff --git a/lib/models/goal.dart b/lib/models/goal.dart
index a214522..d640371 100644
--- a/lib/models/goal.dart
+++ b/lib/models/goal.dart
@@ -14,9 +14,14 @@ class Goal extends HiveObject {
   @HiveField(2)
   List<String> progressNotes;
 
+  @HiveField(3)
+  List<String> linkedNoteIds;
+
   Goal({
     required this.title,
     this.description,
     List<String>? progressNotes,
-  }) : progressNotes = progressNotes ?? [];
+    List<String>? linkedNoteIds,
+  })  : progressNotes = progressNotes ?? [],
+        linkedNoteIds = linkedNoteIds ?? [];
 }
diff --git a/lib/models/omni_note.dart b/lib/models/omni_note.dart
index 786cd36..d846deb 100644
--- a/lib/models/omni_note.dart
+++ b/lib/models/omni_note.dart
@@ -73,6 +73,12 @@ class OmniNote extends HiveObject {
   @HiveField(14)
   DateTime createdAt;
 
+  @HiveField(15)
+  String? seriesId;
+
+  @HiveField(16)
+  List<String> bundleMemberIds;
+
   OmniNote({
     required this.title,
     required this.subtitle,
@@ -89,6 +95,9 @@ class OmniNote extends HiveObject {
     this.goals,
     this.events,
     DateTime? createdAt,
+    this.seriesId,
+    List<String>? bundleMemberIds,
   })  : attachments = attachments ?? [],
-        createdAt = createdAt ?? DateTime.now();
+        createdAt = createdAt ?? DateTime.now(),
+        bundleMemberIds = bundleMemberIds ?? [];
 }
diff --git a/lib/models/task.dart b/lib/models/task.dart
index ca1d1dd..d45ccc4 100644
--- a/lib/models/task.dart
+++ b/lib/models/task.dart
@@ -14,9 +14,13 @@ class Task extends HiveObject {
   @HiveField(2)
   String? recurringRule;
 
+  @HiveField(3)
+  List<String> linkedNoteIds;
+
   Task({
     required this.description,
     this.isCompleted = false,
     this.recurringRule,
-  });
+    List<String>? linkedNoteIds,
+  }) : linkedNoteIds = linkedNoteIds ?? [];
 }
diff --git a/lib/widgets/main_menu_drawer.dart b/lib/widgets/main_menu_drawer.dart
index e673336..123c94f 100644
--- a/lib/widgets/main_menu_drawer.dart
+++ b/lib/widgets/main_menu_drawer.dart
@@ -11,6 +11,8 @@ import '../pages/journal_page.dart';
 import '../pages/collections_page.dart';
 import '../pages/options_page.dart';
 import '../pages/account_page.dart';
+import '../pages/trackers_page.dart';
+import '../pages/media_page.dart';
 
 class MainMenuDrawer extends StatelessWidget {
   const MainMenuDrawer({super.key});
@@ -39,31 +41,31 @@ class MainMenuDrawer extends StatelessWidget {
               context,
               icon: Icons.cloud,
               title: 'Sky / Space',
-              page: const SkySpacePage(),
+              route: '/sky',
             ),
             _buildTile(
               context,
               icon: Icons.build,
               title: 'Workshop / Forge',
-              page: const WorkshopForgePage(),
+              route: '/forge',
             ),
             _buildTile(
               context,
               icon: Icons.grass,
               title: 'Garden / Forest',
-              page: const GardenForestPage(),
+              route: '/garden',
             ),
             _buildTile(
               context,
               icon: Icons.water,
               title: 'Studio / Underwater',
-              page: const StudioUnderwaterPage(),
+              route: '/studio',
             ),
             _buildTile(
               context,
               icon: Icons.account_tree,
               title: 'Root Cave / Underground',
-              page: const RootCavePage(),
+              route: '/root-cave',
             ),
 
             const Divider(),
@@ -73,7 +75,21 @@ class MainMenuDrawer extends StatelessWidget {
               context,
               icon: Icons.book,
               title: 'Journal',
-              page: const JournalPage(),
+              route: '/journal',
+            ),
+
+            _buildTile(
+              context,
+              icon: Icons.track_changes,
+              title: 'Trackers',
+              route: '/trackers',
+            ),
+
+            _buildTile(
+              context,
+              icon: Icons.perm_media,
+              title: 'Media',
+              route: '/media',
             ),
 
             const Divider(),
@@ -83,19 +99,19 @@ class MainMenuDrawer extends StatelessWidget {
               context,
               icon: Icons.collections,
               title: 'Collections',
-              page: const CollectionsPage(),
+              route: '/collections',
             ),
             _buildTile(
               context,
               icon: Icons.settings,
               title: 'Options',
-              page: const OptionsPage(),
+              route: '/options',
             ),
             _buildTile(
               context,
               icon: Icons.person,
               title: 'Account',
-              page: const AccountPage(),
+              route: '/account',
             ),
           ],
         ),
@@ -107,16 +123,14 @@ class MainMenuDrawer extends StatelessWidget {
     BuildContext context, {
     required IconData icon,
     required String title,
-    required Widget page,
+    required String route,
   }) {
     return ListTile(
       leading: Icon(icon, color: Colors.deepPurple),
       title: Text(title),
       onTap: () {
         Navigator.of(context).pop(); // close drawer
-        Navigator.of(context).push(
-          MaterialPageRoute(builder: (_) => page),
-        );
+        Navigator.pushNamed(context, route);
       },
     );
   }
diff --git a/my_changes.diff b/my_changes.diff
index 273b64f..0702789 100644
--- a/my_changes.diff
+++ b/my_changes.diff
@@ -1,219 +0,0 @@
-diff --git a/lib/main.dart b/lib/main.dart
-index 896a037..fd6c73a 100644
---- a/lib/main.dart
-+++ b/lib/main.dart
-@@ -5,7 +5,9 @@ import 'package:hive_flutter/hive_flutter.dart';
- 
- import 'models/omni_note.dart';
- import 'models/attachment.dart';
-+import 'models/day_reflection.dart';
- import 'services/omni_note_service.dart';
-+import 'services/day_reflection_service.dart';
- import 'pages/journal_page.dart';
- 
- Future<void> main() async {
-@@ -15,14 +17,19 @@ Future<void> main() async {
-   // Initialize Hive and HiveFlutter
-   await Hive.initFlutter();
- 
--  // Register all generated adapters
--  Hive.registerAdapter(ZoneThemeAdapter());
--  Hive.registerAdapter(OmniNoteAdapter());
--  Hive.registerAdapter(AttachmentTypeAdapter());
--  Hive.registerAdapter(AttachmentAdapter());
-+  // Register all generated adapters only once
-+  void reg(int id, TypeAdapter adapter) {
-+    if (!Hive.isAdapterRegistered(id)) Hive.registerAdapter(adapter);
-+  }
-+  reg(3, ZoneThemeAdapter());
-+  reg(0, OmniNoteAdapter());
-+  reg(1, AttachmentTypeAdapter());
-+  reg(2, AttachmentAdapter());
-+  reg(7, DayReflectionAdapter());
- 
-   // Open your notes box (or perform any other startup work)
-   await OmniNoteService.instance.init();
-+  await DayReflectionService.instance.init();
- 
-   // Run the app
-   runApp(const MyApp());
-diff --git a/lib/models/day_reflection.dart b/lib/models/day_reflection.dart
-index aa8b146..20a5f61 100644
---- a/lib/models/day_reflection.dart
-+++ b/lib/models/day_reflection.dart
-@@ -2,7 +2,7 @@ import 'package:hive/hive.dart';
- 
- part 'day_reflection.g.dart';
- 
--@HiveType(typeId: 2)
-+@HiveType(typeId: 7)
- class DayReflection extends HiveObject {
-   @HiveField(0)
-   String dateKey; // Format: yyyy-MM-dd
-diff --git a/lib/pages/calendar_overview_page.dart b/lib/pages/calendar_overview_page.dart
-index fa4c16f..939fcb4 100644
---- a/lib/pages/calendar_overview_page.dart
-+++ b/lib/pages/calendar_overview_page.dart
-@@ -4,6 +4,7 @@ import 'package:flutter/material.dart';
- import '../models/omni_note.dart';
- import '../services/omni_note_service.dart';
- import 'note_detail_page.dart';
-+import '../widgets/main_menu_drawer.dart';
- 
- enum CalView { day, week, month, year }
- 
-@@ -100,6 +101,7 @@ class _CalendarOverviewPageState extends State<CalendarOverviewPage> {
-     }[_view]!;
- 
-     return Scaffold(
-+      drawer: const MainMenuDrawer(),
-       appBar: AppBar(
-         title: const Text('Calendar'),
-       ),
-diff --git a/lib/pages/journal_page.dart b/lib/pages/journal_page.dart
-index e77a9ff..6f4f4d4 100644
---- a/lib/pages/journal_page.dart
-+++ b/lib/pages/journal_page.dart
-@@ -9,6 +9,7 @@ import '../models/attachment.dart';
- import '../services/omni_note_service.dart';
- import 'note_detail_page.dart';
- import 'calendar_overview_page.dart';
-+import '../widgets/main_menu_drawer.dart';
- 
- /// JournalPage shows **all** notes, either as a ListTile or in a 2-column grid.
- class JournalPage extends StatefulWidget {
-@@ -55,6 +56,7 @@ class _JournalPageState extends State<JournalPage> {
-     final notes = _displayedNotes;
- 
-     return Scaffold(
-+      drawer: const MainMenuDrawer(),
-       appBar: AppBar(
-         title: const Text('Journal'),
-         actions: [
-@@ -246,9 +248,7 @@ class _JournalPageState extends State<JournalPage> {
-   }
- }
- 
--/// ────────────────────────────────────────────────────────────────────────────
--/// A small “card” for the grid view.
--/// ────────────────────────────────────────────────────────────────────────────
-+/// Small card for grid view.
- class _NoteCard extends StatelessWidget {
-   final OmniNote note;
-   final VoidCallback onTap;
-@@ -326,9 +326,7 @@ class _NoteCard extends StatelessWidget {
-   }
- }
- 
--/// ────────────────────────────────────────────────────────────────────────────
--/// A simple ListTile for the list view.
--/// ────────────────────────────────────────────────────────────────────────────
-+/// Simple tile for list view.
- class _NoteListTile extends StatelessWidget {
-   final OmniNote note;
-   final VoidCallback onTap;
-@@ -374,9 +372,6 @@ class _NoteListTile extends StatelessWidget {
-   }
- }
- 
--/// ────────────────────────────────────────────────────────────────────────────
--/// A SearchDelegate that calls `onSearch(query)`.
--/// ────────────────────────────────────────────────────────────────────────────
- class _NoteSearchDelegate extends SearchDelegate<void> {
-   final Future<void> Function(String) onSearch;
-   final String initial;
-diff --git a/lib/pages/note_detail_page.dart b/lib/pages/note_detail_page.dart
-index fb93e26..66fdef0 100644
---- a/lib/pages/note_detail_page.dart
-+++ b/lib/pages/note_detail_page.dart
-@@ -1,5 +1,3 @@
--// lib/pages/note_detail_page.dart
--
- import 'dart:io';
- 
- import 'package:flutter/material.dart';
-@@ -97,19 +95,28 @@ class _NoteDetailPageState extends State<NoteDetailPage> {
-   Future<bool> _req(Permission p) async =>
-       (await p.request()) == PermissionStatus.granted;
- 
-+  Future<Directory> _notesDir() async {
-+    final dir = await getApplicationDocumentsDirectory();
-+    final notes = Directory('${dir.path}/notes');
-+    if (!await notes.exists()) {
-+      await notes.create(recursive: true);
-+    }
-+    return notes;
-+  }
-+
-   // ─── Image ────────────────────────────────────────────────────────────────
-   Future<void> _pickImage() async {
-     if (!await _req(Permission.camera)) return;
-     final img = await ImagePicker().pickImage(source: ImageSource.camera);
-     if (img == null) return;
--    final dir = await getApplicationDocumentsDirectory();
-+    final dir = await _notesDir();
-     final f = await File(img.path).copy(
--      '${dir.path}/notes/img_${DateTime.now().millisecondsSinceEpoch}.jpg',
-+      '${dir.path}/img_${DateTime.now().millisecondsSinceEpoch}.jpg',
-     );
-     setState(() => _imageFile = f);
-   }
- 
--  // ─── Video ────────────────────────────────────────────────────────────────
-+  // ─── Video ───────────────────────────────────────────────────────────────
-   Future<void> _pickVideo() async {
-     if (!await _req(Permission.camera) ||
-         !await _req(Permission.microphone)) return;
-@@ -118,9 +125,9 @@ class _NoteDetailPageState extends State<NoteDetailPage> {
-       maxDuration: const Duration(minutes: 3),
-     );
-     if (vid == null) return;
--    final dir = await getApplicationDocumentsDirectory();
-+    final dir = await _notesDir();
-     final f = await File(vid.path).copy(
--      '${dir.path}/notes/vid_${DateTime.now().millisecondsSinceEpoch}.mp4',
-+      '${dir.path}/vid_${DateTime.now().millisecondsSinceEpoch}.mp4',
-     );
-     setState(() => _videoFile = f);
-   }
-@@ -135,9 +142,8 @@ class _NoteDetailPageState extends State<NoteDetailPage> {
-       });
-     } else {
-       if (!await _req(Permission.microphone)) return;
--      final dir = await getApplicationDocumentsDirectory();
--      final p =
--          '${dir.path}/notes/audio_${DateTime.now().millisecondsSinceEpoch}.m4a';
-+      final dir = await _notesDir();
-+      final p = '${dir.path}/audio_${DateTime.now().millisecondsSinceEpoch}.m4a';
-       await _recorder.start(path: p, encoder: AudioEncoder.aacLc);
-       setState(() => _isRecording = true);
-     }
-@@ -157,7 +163,7 @@ class _NoteDetailPageState extends State<NoteDetailPage> {
-     }
-   }
- 
--  // ─── Save ────────────────────────────────────────────────────────────────
-+  // ─── Save ───────────────────────────────────────────────────────────────
-   Future<void> _save() async {
-     if (!_formKey.currentState!.validate()) return;
-     final svc = OmniNoteService.instance;
-diff --git a/lib/pages/time_group_journal_page.dart b/lib/pages/time_group_journal_page.dart
-index 0f2021f..f660464 100644
---- a/lib/pages/time_group_journal_page.dart
-+++ b/lib/pages/time_group_journal_page.dart
-@@ -6,6 +6,7 @@ import 'package:intl/intl.dart';
- import '../models/omni_note.dart';
- import '../services/omni_note_service.dart';
- import 'note_detail_page.dart';
-+import '../widgets/main_menu_drawer.dart';
- 
- class TimeGroupJournalPage extends StatefulWidget {
-   const TimeGroupJournalPage({Key? key}) : super(key: key);
-@@ -59,6 +60,7 @@ class _TimeGroupJournalPageState extends State<TimeGroupJournalPage> {
-   @override
-   Widget build(BuildContext context) {
-     return Scaffold(
-+      drawer: const MainMenuDrawer(),
-       appBar: AppBar(title: const Text('Time-Grouped Journal')),
-       body: _isLoading
-           ? const Center(child: CircularProgressIndicator())
